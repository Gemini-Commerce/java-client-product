/*
 * Product Service
 * API for managing products
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ProductLocalizedText;
import org.openapitools.client.model.ProductProductVariant;
import org.openapitools.client.model.ProtobufAny;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ProductCreateProductRequestV2
 */
public class ProductCreateProductRequestV2Test {
    private final ProductCreateProductRequestV2 model = new ProductCreateProductRequestV2();

    /**
     * Model tests for ProductCreateProductRequestV2
     */
    @Test
    public void testProductCreateProductRequestV2() {
        // TODO: test ProductCreateProductRequestV2
    }

    /**
     * Test the property 'tenantId'
     */
    @Test
    public void tenantIdTest() {
        // TODO: test tenantId
    }

    /**
     * Test the property 'entityType'
     */
    @Test
    public void entityTypeTest() {
        // TODO: test entityType
    }

    /**
     * Test the property 'entityCode'
     */
    @Test
    public void entityCodeTest() {
        // TODO: test entityCode
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'isConfigurable'
     */
    @Test
    public void isConfigurableTest() {
        // TODO: test isConfigurable
    }

    /**
     * Test the property 'variantAttributes'
     */
    @Test
    public void variantAttributesTest() {
        // TODO: test variantAttributes
    }

    /**
     * Test the property 'isVirtual'
     */
    @Test
    public void isVirtualTest() {
        // TODO: test isVirtual
    }

    /**
     * Test the property 'isGiftcard'
     */
    @Test
    public void isGiftcardTest() {
        // TODO: test isGiftcard
    }

    /**
     * Test the property 'hasConfigurator'
     */
    @Test
    public void hasConfiguratorTest() {
        // TODO: test hasConfigurator
    }

    /**
     * Test the property 'urlKey'
     */
    @Test
    public void urlKeyTest() {
        // TODO: test urlKey
    }

    /**
     * Test the property 'maxSaleableQuantity'
     */
    @Test
    public void maxSaleableQuantityTest() {
        // TODO: test maxSaleableQuantity
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'variants'
     */
    @Test
    public void variantsTest() {
        // TODO: test variants
    }

    /**
     * Test the property 'mediaVariantAttributes'
     */
    @Test
    public void mediaVariantAttributesTest() {
        // TODO: test mediaVariantAttributes
    }

}
