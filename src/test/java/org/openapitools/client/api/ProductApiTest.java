/*
 * Product Service
 * API for managing products
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import GeminiCommerce_Product.ApiException;
import org.openapitools.client.model.EntitymanagerAttribute;
import org.openapitools.client.model.EntitymanagerAttributeGroup;
import org.openapitools.client.model.EntitymanagerBulkCreateAttributeRequest;
import org.openapitools.client.model.EntitymanagerBulkCreateAttributeResponse;
import org.openapitools.client.model.EntitymanagerCreateAttributeGroupRequest;
import org.openapitools.client.model.EntitymanagerCreateAttributeOptionsRequest;
import org.openapitools.client.model.EntitymanagerCreateAttributeOptionsResponse;
import org.openapitools.client.model.EntitymanagerCreateEntityResponse;
import org.openapitools.client.model.EntitymanagerCreateOptionsListRequest;
import org.openapitools.client.model.EntitymanagerCreateOptionsListResponse;
import org.openapitools.client.model.EntitymanagerDeleteAttributeRequest;
import org.openapitools.client.model.EntitymanagerEntity;
import org.openapitools.client.model.EntitymanagerEntityRequest;
import org.openapitools.client.model.EntitymanagerGetAttributeGroupRequest;
import org.openapitools.client.model.EntitymanagerGetAttributeOptionRequest;
import org.openapitools.client.model.EntitymanagerGetAttributeOptionResponse;
import org.openapitools.client.model.EntitymanagerGetAttributeOptionsRequest;
import org.openapitools.client.model.EntitymanagerGetAttributeOptionsResponse;
import org.openapitools.client.model.EntitymanagerGetOptionsListRequest;
import org.openapitools.client.model.EntitymanagerGetOptionsListResponse;
import org.openapitools.client.model.EntitymanagerListAttributeGroupsRequest;
import org.openapitools.client.model.EntitymanagerListAttributeGroupsResponse;
import org.openapitools.client.model.EntitymanagerListAttributeOptionsRequest;
import org.openapitools.client.model.EntitymanagerListAttributeOptionsResponse;
import org.openapitools.client.model.EntitymanagerListEntitiesRequest;
import org.openapitools.client.model.EntitymanagerListEntitiesResponse;
import org.openapitools.client.model.EntitymanagerListOptionsListsRequest;
import org.openapitools.client.model.EntitymanagerListOptionsListsResponse;
import org.openapitools.client.model.EntitymanagerUpdateAttributeGroupRequest;
import org.openapitools.client.model.EntitymanagerUpdateAttributeOptionsRequest;
import org.openapitools.client.model.EntitymanagerUpdateAttributeOptionsResponse;
import org.openapitools.client.model.EntitymanagerUpdateAttributeRequest;
import org.openapitools.client.model.EntitymanagerUpdateOptionsListRequest;
import org.openapitools.client.model.EntitymanagerUpdateOptionsListResponse;
import org.openapitools.client.model.ProductAddMediaGalleryEntryRequest;
import org.openapitools.client.model.ProductAddMediaGalleryEntryResponse;
import org.openapitools.client.model.ProductBulkAddAssetsEntriesRequest;
import org.openapitools.client.model.ProductBulkAddAssetsEntriesResponse;
import org.openapitools.client.model.ProductBulkDeleteProductsRequest;
import org.openapitools.client.model.ProductBulkRemoveAssetsEntriesRequest;
import org.openapitools.client.model.ProductBulkUpdateAssetsEntriesRequest;
import org.openapitools.client.model.ProductBulkUpdateAssetsEntriesResponse;
import org.openapitools.client.model.ProductBulkUpdateRequest;
import org.openapitools.client.model.ProductBulkUpdateRequestV2;
import org.openapitools.client.model.ProductBulkUpdateResponse;
import org.openapitools.client.model.ProductBulkUpdateResponseV2;
import org.openapitools.client.model.ProductCreateProductRequest;
import org.openapitools.client.model.ProductCreateProductRequestV2;
import org.openapitools.client.model.ProductCreateProductResponse;
import org.openapitools.client.model.ProductCreateProductResponseV2;
import org.openapitools.client.model.ProductDeleteProductRequest;
import org.openapitools.client.model.ProductDeleteRequest;
import org.openapitools.client.model.ProductDeleteResponse;
import org.openapitools.client.model.ProductGetProductByCodeRequest;
import org.openapitools.client.model.ProductGetProductByCodeResponse;
import org.openapitools.client.model.ProductGetProductByUrlKeyRequest;
import org.openapitools.client.model.ProductGetProductByUrlKeyResponse;
import org.openapitools.client.model.ProductGetProductRequest;
import org.openapitools.client.model.ProductGetProductResponse;
import org.openapitools.client.model.ProductListProductsByIdsRequest;
import org.openapitools.client.model.ProductListProductsByIdsResponse;
import org.openapitools.client.model.ProductListProductsBySkuRequest;
import org.openapitools.client.model.ProductListProductsBySkuResponse;
import org.openapitools.client.model.ProductListProductsRequest;
import org.openapitools.client.model.ProductListProductsResponse;
import org.openapitools.client.model.ProductListVariantsBySkuRequest;
import org.openapitools.client.model.ProductListVariantsBySkuResponse;
import org.openapitools.client.model.ProductRemoveMediaGalleryEntryRequest;
import org.openapitools.client.model.ProductUpdateMediaGalleryEntryRequest;
import org.openapitools.client.model.ProductUpdateProductRequest;
import org.openapitools.client.model.ProductUpdateProductRequestV2;
import org.openapitools.client.model.ProductUpdateProductResponse;
import org.openapitools.client.model.RpcStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductApi
 */
@Disabled
public class ProductApiTest {

    private final ProductApi api = new ProductApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productAddMediaGalleryEntryTest() throws ApiException {
        ProductAddMediaGalleryEntryRequest body = null;
        ProductAddMediaGalleryEntryResponse response = api.productAddMediaGalleryEntry(body);
        // TODO: test validations
    }

    /**
     * Assets endpoints
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productBulkAddAssetsEntriesTest() throws ApiException {
        ProductBulkAddAssetsEntriesRequest body = null;
        ProductBulkAddAssetsEntriesResponse response = api.productBulkAddAssetsEntries(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productBulkCreateAttributeTest() throws ApiException {
        EntitymanagerBulkCreateAttributeRequest body = null;
        EntitymanagerBulkCreateAttributeResponse response = api.productBulkCreateAttribute(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productBulkDeleteProductsTest() throws ApiException {
        ProductBulkDeleteProductsRequest body = null;
        Object response = api.productBulkDeleteProducts(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productBulkRemoveAssetsEntriesTest() throws ApiException {
        ProductBulkRemoveAssetsEntriesRequest body = null;
        Object response = api.productBulkRemoveAssetsEntries(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productBulkUpdateTest() throws ApiException {
        ProductBulkUpdateRequest body = null;
        ProductBulkUpdateResponse response = api.productBulkUpdate(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productBulkUpdateAssetsEntriesTest() throws ApiException {
        ProductBulkUpdateAssetsEntriesRequest body = null;
        ProductBulkUpdateAssetsEntriesResponse response = api.productBulkUpdateAssetsEntries(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productBulkUpdateV2Test() throws ApiException {
        ProductBulkUpdateRequestV2 body = null;
        ProductBulkUpdateResponseV2 response = api.productBulkUpdateV2(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productCreateAttributeGroupTest() throws ApiException {
        EntitymanagerCreateAttributeGroupRequest body = null;
        EntitymanagerAttributeGroup response = api.productCreateAttributeGroup(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productCreateAttributeOptionsTest() throws ApiException {
        EntitymanagerCreateAttributeOptionsRequest body = null;
        EntitymanagerCreateAttributeOptionsResponse response = api.productCreateAttributeOptions(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productCreateEntityTest() throws ApiException {
        EntitymanagerEntity body = null;
        EntitymanagerCreateEntityResponse response = api.productCreateEntity(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productCreateOptionsListTest() throws ApiException {
        EntitymanagerCreateOptionsListRequest body = null;
        EntitymanagerCreateOptionsListResponse response = api.productCreateOptionsList(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productCreateProductTest() throws ApiException {
        ProductCreateProductRequest body = null;
        ProductCreateProductResponse response = api.productCreateProduct(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productCreateProductV2Test() throws ApiException {
        ProductCreateProductRequestV2 body = null;
        ProductCreateProductResponseV2 response = api.productCreateProductV2(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeleteTest() throws ApiException {
        ProductDeleteRequest body = null;
        ProductDeleteResponse response = api.productDelete(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeleteAttributeTest() throws ApiException {
        EntitymanagerDeleteAttributeRequest body = null;
        Object response = api.productDeleteAttribute(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productDeleteProductTest() throws ApiException {
        ProductDeleteProductRequest body = null;
        Object response = api.productDeleteProduct(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productGetAttributeGroupTest() throws ApiException {
        EntitymanagerGetAttributeGroupRequest body = null;
        EntitymanagerAttributeGroup response = api.productGetAttributeGroup(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productGetAttributeOptionTest() throws ApiException {
        EntitymanagerGetAttributeOptionRequest body = null;
        EntitymanagerGetAttributeOptionResponse response = api.productGetAttributeOption(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productGetAttributeOptionsTest() throws ApiException {
        EntitymanagerGetAttributeOptionsRequest body = null;
        EntitymanagerGetAttributeOptionsResponse response = api.productGetAttributeOptions(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productGetEntityTest() throws ApiException {
        EntitymanagerEntityRequest body = null;
        EntitymanagerEntity response = api.productGetEntity(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productGetOptionsListTest() throws ApiException {
        EntitymanagerGetOptionsListRequest body = null;
        EntitymanagerGetOptionsListResponse response = api.productGetOptionsList(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productGetProductTest() throws ApiException {
        ProductGetProductRequest body = null;
        ProductGetProductResponse response = api.productGetProduct(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productGetProductByCodeTest() throws ApiException {
        ProductGetProductByCodeRequest body = null;
        ProductGetProductByCodeResponse response = api.productGetProductByCode(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productGetProductByUrlKeyTest() throws ApiException {
        ProductGetProductByUrlKeyRequest body = null;
        ProductGetProductByUrlKeyResponse response = api.productGetProductByUrlKey(body);
        // TODO: test validations
    }

    /**
     * Attribute Groups endpoints
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productListAttributeGroupsTest() throws ApiException {
        EntitymanagerListAttributeGroupsRequest body = null;
        EntitymanagerListAttributeGroupsResponse response = api.productListAttributeGroups(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productListAttributeOptionsTest() throws ApiException {
        EntitymanagerListAttributeOptionsRequest body = null;
        EntitymanagerListAttributeOptionsResponse response = api.productListAttributeOptions(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productListEntitiesTest() throws ApiException {
        EntitymanagerListEntitiesRequest body = null;
        EntitymanagerListEntitiesResponse response = api.productListEntities(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productListOptionsListsTest() throws ApiException {
        EntitymanagerListOptionsListsRequest body = null;
        EntitymanagerListOptionsListsResponse response = api.productListOptionsLists(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productListProductsTest() throws ApiException {
        ProductListProductsRequest body = null;
        ProductListProductsResponse response = api.productListProducts(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productListProductsByIdsTest() throws ApiException {
        ProductListProductsByIdsRequest body = null;
        ProductListProductsByIdsResponse response = api.productListProductsByIds(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productListProductsBySkuTest() throws ApiException {
        ProductListProductsBySkuRequest body = null;
        ProductListProductsBySkuResponse response = api.productListProductsBySku(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productListVariantsBySkuTest() throws ApiException {
        ProductListVariantsBySkuRequest body = null;
        ProductListVariantsBySkuResponse response = api.productListVariantsBySku(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productRemoveMediaGalleryEntryTest() throws ApiException {
        ProductRemoveMediaGalleryEntryRequest body = null;
        Object response = api.productRemoveMediaGalleryEntry(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productUpdateAttributeTest() throws ApiException {
        EntitymanagerUpdateAttributeRequest body = null;
        EntitymanagerAttribute response = api.productUpdateAttribute(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productUpdateAttributeGroupTest() throws ApiException {
        EntitymanagerUpdateAttributeGroupRequest body = null;
        EntitymanagerAttributeGroup response = api.productUpdateAttributeGroup(body);
        // TODO: test validations
    }

    /**
     * rpc GetAttributeOptionByCode (product.entitymanager.GetAttributeOptionByCodeRequest) returns (product.entitymanager.GetAttributeOptionByCodeResponse) {}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productUpdateAttributeOptionsTest() throws ApiException {
        EntitymanagerUpdateAttributeOptionsRequest body = null;
        EntitymanagerUpdateAttributeOptionsResponse response = api.productUpdateAttributeOptions(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productUpdateMediaGalleryEntryTest() throws ApiException {
        ProductUpdateMediaGalleryEntryRequest body = null;
        Object response = api.productUpdateMediaGalleryEntry(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productUpdateOptionsListTest() throws ApiException {
        EntitymanagerUpdateOptionsListRequest body = null;
        EntitymanagerUpdateOptionsListResponse response = api.productUpdateOptionsList(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productUpdateProductTest() throws ApiException {
        ProductUpdateProductRequest body = null;
        ProductUpdateProductResponse response = api.productUpdateProduct(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productUpdateProductV2Test() throws ApiException {
        ProductUpdateProductRequestV2 body = null;
        Object response = api.productUpdateProductV2(body);
        // TODO: test validations
    }

}
